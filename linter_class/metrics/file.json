{"formatVersion":2,"timestamp":"2023-02-03 10:25:43.000","records":[{"path":"lib\\home\\domain\\usecases\\get_products_by_name_and_id_usecase.dart","fileMetrics":[{"metricsId":"technical-debt","value":0.0,"level":"none","comment":"This compilation unit has 0.0 swe hours of debt.","context":[]}],"classes":{"GetProductsByNameAndIdUsecase":{"codeSpan":{"start":{"offset":0,"line":1,"column":1},"end":{"offset":800,"line":57,"column":2},"text":"class GetProductsByNameAndIdUsecase {\r\n  void get() {\r\n    const bool whatever = true;\r\n\r\n    if (whatever == true) {}\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n  }\r\n}"},"metrics":[{"metricsId":"number-of-methods","value":1,"unitType":"method","level":"none","comment":"This class has 1 method.","context":[{"message":"method get increase metric value","codeSpan":{"start":{"offset":41,"line":2,"column":3},"end":{"offset":797,"line":56,"column":4},"text":"void get() {\r\n    const bool whatever = true;\r\n\r\n    if (whatever == true) {}\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n  }"}}]},{"metricsId":"weight-of-class","value":1.0,"level":"none","comment":"This class has a weight of 1.0.","context":[{"message":"functional method get increase metric value","codeSpan":{"start":{"offset":41,"line":2,"column":3},"end":{"offset":797,"line":56,"column":4},"text":"void get() {\r\n    const bool whatever = true;\r\n\r\n    if (whatever == true) {}\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n  }"}}]}]}},"functions":{"GetProductsByNameAndIdUsecase.get":{"codeSpan":{"start":{"offset":41,"line":2,"column":3},"end":{"offset":797,"line":56,"column":4},"text":"void get() {\r\n    const bool whatever = true;\r\n\r\n    if (whatever == true) {}\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n  }"},"metrics":[{"metricsId":"cyclomatic-complexity","value":2,"level":"none","comment":"This method has a cyclomatic complexity of 2.","context":[{"message":"If statement increases complexity","codeSpan":{"start":{"offset":94,"line":5,"column":5},"end":{"offset":118,"line":5,"column":29},"text":"if (whatever == true) {}"}}]},{"metricsId":"halstead-volume","value":106.80869236481865,"level":"none","comment":"This method has a halstead volume of 106.80869236481865.","context":[]},{"metricsId":"lines-of-code","value":55,"unitType":"lines","level":"none","comment":"This method has 55 lines of code.","context":[]},{"metricsId":"maximum-nesting-level","value":2,"level":"none","comment":"This method has a nesting level of 2.","context":[{"message":"Block function body increases depth","codeSpan":{"start":{"offset":52,"line":2,"column":14},"end":{"offset":797,"line":56,"column":4},"text":"{\r\n    const bool whatever = true;\r\n\r\n    if (whatever == true) {}\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n    print('');\r\n  }"}},{"message":"If statement increases depth","codeSpan":{"start":{"offset":116,"line":5,"column":27},"end":{"offset":118,"line":5,"column":29},"text":"{}"}}]},{"metricsId":"number-of-parameters","value":0,"level":"none","comment":"This method has 0 parameters.","context":[]},{"metricsId":"source-lines-of-code","value":43,"unitType":"lines","level":"none","comment":"This method has 43 source lines of code.","context":[{"message":"line contains source code","codeSpan":{"start":{"offset":55,"line":3,"column":0},"end":{"offset":55,"line":3,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":90,"line":5,"column":0},"end":{"offset":90,"line":5,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":122,"line":7,"column":0},"end":{"offset":122,"line":7,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":138,"line":8,"column":0},"end":{"offset":138,"line":8,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":154,"line":9,"column":0},"end":{"offset":154,"line":9,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":170,"line":10,"column":0},"end":{"offset":170,"line":10,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":186,"line":11,"column":0},"end":{"offset":186,"line":11,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":204,"line":13,"column":0},"end":{"offset":204,"line":13,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":220,"line":14,"column":0},"end":{"offset":220,"line":14,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":236,"line":15,"column":0},"end":{"offset":236,"line":15,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":252,"line":16,"column":0},"end":{"offset":252,"line":16,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":268,"line":17,"column":0},"end":{"offset":268,"line":17,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":286,"line":19,"column":0},"end":{"offset":286,"line":19,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":302,"line":20,"column":0},"end":{"offset":302,"line":20,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":320,"line":22,"column":0},"end":{"offset":320,"line":22,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":336,"line":23,"column":0},"end":{"offset":336,"line":23,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":352,"line":24,"column":0},"end":{"offset":352,"line":24,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":368,"line":25,"column":0},"end":{"offset":368,"line":25,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":386,"line":27,"column":0},"end":{"offset":386,"line":27,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":402,"line":28,"column":0},"end":{"offset":402,"line":28,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":418,"line":29,"column":0},"end":{"offset":418,"line":29,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":434,"line":30,"column":0},"end":{"offset":434,"line":30,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":450,"line":31,"column":0},"end":{"offset":450,"line":31,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":466,"line":32,"column":0},"end":{"offset":466,"line":32,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":484,"line":34,"column":0},"end":{"offset":484,"line":34,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":500,"line":35,"column":0},"end":{"offset":500,"line":35,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":516,"line":36,"column":0},"end":{"offset":516,"line":36,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":532,"line":37,"column":0},"end":{"offset":532,"line":37,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":548,"line":38,"column":0},"end":{"offset":548,"line":38,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":564,"line":39,"column":0},"end":{"offset":564,"line":39,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":582,"line":41,"column":0},"end":{"offset":582,"line":41,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":598,"line":42,"column":0},"end":{"offset":598,"line":42,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":614,"line":43,"column":0},"end":{"offset":614,"line":43,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":630,"line":44,"column":0},"end":{"offset":630,"line":44,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":646,"line":45,"column":0},"end":{"offset":646,"line":45,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":664,"line":47,"column":0},"end":{"offset":664,"line":47,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":680,"line":48,"column":0},"end":{"offset":680,"line":48,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":696,"line":49,"column":0},"end":{"offset":696,"line":49,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":714,"line":51,"column":0},"end":{"offset":714,"line":51,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":730,"line":52,"column":0},"end":{"offset":730,"line":52,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":746,"line":53,"column":0},"end":{"offset":746,"line":53,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":762,"line":54,"column":0},"end":{"offset":762,"line":54,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":778,"line":55,"column":0},"end":{"offset":778,"line":55,"column":0},"text":""}}]},{"metricsId":"maintainability-index","value":50,"level":"none","comment":"This method has 50 maintainability index.","context":[]}]}},"issues":[{"ruleId":"no-boolean-literal-compare","documentation":"https://dcm.dev/docs/individuals/rules/common/no-boolean-literal-compare","codeSpan":{"start":{"offset":98,"line":5,"column":9},"end":{"offset":114,"line":5,"column":25},"text":"whatever == true"},"severity":"style","message":"Comparing boolean values to boolean literals is unnecessary, as those expressions will result in booleans too. Just use the boolean values directly or negate them.","suggestion":{"comment":"This expression is unnecessarily compared to a boolean. Just use it directly.","replacement":"whatever"}},{"ruleId":"no-empty-block","documentation":"https://dcm.dev/docs/individuals/rules/common/no-empty-block","codeSpan":{"start":{"offset":116,"line":5,"column":27},"end":{"offset":118,"line":5,"column":29},"text":"{}"},"severity":"style","message":"Block is empty. Empty blocks are often indicators of missing code."}],"antiPatternCases":[]},{"path":"lib\\main.dart","fileMetrics":[{"metricsId":"technical-debt","value":0.0,"level":"none","comment":"This compilation unit has 0.0 swe hours of debt.","context":[]}],"classes":{"MyApp":{"codeSpan":{"start":{"offset":132,"line":8,"column":1},"end":{"offset":1089,"line":33,"column":2},"text":"class MyApp extends StatelessWidget {\r\n  const MyApp({super.key});\r\n\r\n  // This widget is the root of your application.\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    print('');\r\n\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n        // This is the theme of your application.\r\n        //\r\n        // Try running your application with \"flutter run\". You'll see the\r\n        // application has a blue toolbar. Then, without quitting the app, try\r\n        // changing the primarySwatch below to Colors.green and then invoke\r\n        // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\r\n        // or simply save your changes to \"hot reload\" in a Flutter IDE).\r\n        // Notice that the counter didn't reset back to zero; the application\r\n        // is not restarted.\r\n        primarySwatch: Colors.blue,\r\n      ),\r\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n    );\r\n  }\r\n}"},"metrics":[{"metricsId":"number-of-methods","value":2,"unitType":"methods","level":"none","comment":"This class has 2 methods.","context":[{"message":"constructor MyApp increase metric value","codeSpan":{"start":{"offset":173,"line":9,"column":3},"end":{"offset":198,"line":9,"column":28},"text":"const MyApp({super.key});"}},{"message":"method build increase metric value","codeSpan":{"start":{"offset":268,"line":13,"column":3},"end":{"offset":1086,"line":32,"column":4},"text":"Widget build(BuildContext context) {\r\n    print('');\r\n\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n        // This is the theme of your application.\r\n        //\r\n        // Try running your application with \"flutter run\". You'll see the\r\n        // application has a blue toolbar. Then, without quitting the app, try\r\n        // changing the primarySwatch below to Colors.green and then invoke\r\n        // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\r\n        // or simply save your changes to \"hot reload\" in a Flutter IDE).\r\n        // Notice that the counter didn't reset back to zero; the application\r\n        // is not restarted.\r\n        primarySwatch: Colors.blue,\r\n      ),\r\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n    );\r\n  }"}}]},{"metricsId":"weight-of-class","value":0.5,"level":"none","comment":"This class has a weight of 0.5.","context":[{"message":"public constructor MyApp decrease metric value","codeSpan":{"start":{"offset":173,"line":9,"column":3},"end":{"offset":198,"line":9,"column":28},"text":"const MyApp({super.key});"}},{"message":"functional method build increase metric value","codeSpan":{"start":{"offset":268,"line":13,"column":3},"end":{"offset":1086,"line":32,"column":4},"text":"Widget build(BuildContext context) {\r\n    print('');\r\n\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n        // This is the theme of your application.\r\n        //\r\n        // Try running your application with \"flutter run\". You'll see the\r\n        // application has a blue toolbar. Then, without quitting the app, try\r\n        // changing the primarySwatch below to Colors.green and then invoke\r\n        // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\r\n        // or simply save your changes to \"hot reload\" in a Flutter IDE).\r\n        // Notice that the counter didn't reset back to zero; the application\r\n        // is not restarted.\r\n        primarySwatch: Colors.blue,\r\n      ),\r\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n    );\r\n  }"}}]}]},"MyHomePage":{"codeSpan":{"start":{"offset":1093,"line":35,"column":1},"end":{"offset":1743,"line":51,"column":2},"text":"class MyHomePage extends StatefulWidget {\r\n  const MyHomePage({super.key, required this.title});\r\n\r\n  // This widget is the home page of your application. It is stateful, meaning\r\n  // that it has a State object (defined below) that contains fields that affect\r\n  // how it looks.\r\n\r\n  // This class is the configuration for the state. It holds the values (in this\r\n  // case the title) provided by the parent (in this case the App widget) and\r\n  // used by the build method of the State. Fields in a Widget subclass are\r\n  // always marked \"final\".\r\n\r\n  final String title;\r\n\r\n  @override\r\n  State<MyHomePage> createState() => _MyHomePageState();\r\n}"},"metrics":[{"metricsId":"number-of-methods","value":2,"unitType":"methods","level":"none","comment":"This class has 2 methods.","context":[{"message":"constructor MyHomePage increase metric value","codeSpan":{"start":{"offset":1138,"line":36,"column":3},"end":{"offset":1189,"line":36,"column":54},"text":"const MyHomePage({super.key, required this.title});"}},{"message":"method createState increase metric value","codeSpan":{"start":{"offset":1686,"line":50,"column":3},"end":{"offset":1740,"line":50,"column":57},"text":"State<MyHomePage> createState() => _MyHomePageState();"}}]},{"metricsId":"weight-of-class","value":0.5,"level":"none","comment":"This class has a weight of 0.5.","context":[{"message":"public constructor MyHomePage decrease metric value","codeSpan":{"start":{"offset":1138,"line":36,"column":3},"end":{"offset":1189,"line":36,"column":54},"text":"const MyHomePage({super.key, required this.title});"}},{"message":"functional method createState increase metric value","codeSpan":{"start":{"offset":1686,"line":50,"column":3},"end":{"offset":1740,"line":50,"column":57},"text":"State<MyHomePage> createState() => _MyHomePageState();"}}]}]},"_MyHomePageState":{"codeSpan":{"start":{"offset":1747,"line":53,"column":1},"end":{"offset":4669,"line":123,"column":2},"text":"class _MyHomePageState extends State<MyHomePage> {\r\n  int _counter = 0;\r\n\r\n  void _incrementCounter() {\r\n    setState(() {\r\n      // This call to setState tells the Flutter framework that something has\r\n      // changed in this State, which causes it to rerun the build method below\r\n      // so that the display can reflect the updated values. If we changed\r\n      // _counter without calling setState(), then the build method would not be\r\n      // called again, and so nothing would appear to happen.\r\n      _counter++;\r\n    });\r\n  }\r\n\r\n  @override\r\n  Widget build(BuildContext context) {\r\n    \r\n\r\n\r\n\r\n\r\n    // This method is rerun every time setState is called, for instance as done\r\n    // by the _incrementCounter method above.\r\n    //\r\n    // The Flutter framework has been optimized to make rerunning build methods\r\n    // fast, so that you can just rebuild anything that needs updating rather\r\n    // than having to individually change instances of widgets.\r\n    return Scaffold(\r\n        appBar: AppBar(\r\n          // Here we take the value from the MyHomePage object that was created by\r\n          // the App.build method, and use it to set our appbar title.\r\n          title: Text(widget.title),\r\n        ),\r\n        body: Center(\r\n          // Center is a layout widget. It takes a single child and positions it\r\n          // in the middle of the parent.\r\n          child: Column(\r\n            // Column is also a layout widget. It takes a list of children and\r\n            // arranges them vertically. By default, it sizes itself to fit its\r\n            // children horizontally, and tries to be as tall as its parent.\r\n            //\r\n            // Invoke \"debug painting\" (press \"p\" in the console, choose the\r\n            // \"Toggle Debug Paint\" action from the Flutter Inspector in Android\r\n            // Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)\r\n            // to see the wireframe for each widget.\r\n            //\r\n            // Column has various properties to control how it sizes itself and\r\n            // how it positions its children. Here we use mainAxisAlignment to\r\n            // center the children vertically; the main axis here is the vertical\r\n            // axis because Columns are vertical (the cross axis would be\r\n            // horizontal).\r\n            mainAxisAlignment: MainAxisAlignment.center,\r\n            children: <Widget>[\r\n              const Text(\r\n                'You have pushed the button this many times:',\r\n              ),\r\n              Text(\r\n                '$_counter',\r\n                style: Theme.of(context).textTheme.headline4,\r\n                overflow: TextOverflow.ellipsis,\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n        floatingActionButton: FloatingActionButton(\r\n          onPressed: _incrementCounter,\r\n          tooltip: 'Increment',\r\n          child: const Icon(Icons.add),\r\n        ));\r\n  }\r\n}"},"metrics":[{"metricsId":"number-of-methods","value":2,"unitType":"methods","level":"none","comment":"This class has 2 methods.","context":[{"message":"method _incrementCounter increase metric value","codeSpan":{"start":{"offset":1824,"line":56,"column":3},"end":{"offset":2283,"line":65,"column":4},"text":"void _incrementCounter() {\r\n    setState(() {\r\n      // This call to setState tells the Flutter framework that something has\r\n      // changed in this State, which causes it to rerun the build method below\r\n      // so that the display can reflect the updated values. If we changed\r\n      // _counter without calling setState(), then the build method would not be\r\n      // called again, and so nothing would appear to happen.\r\n      _counter++;\r\n    });\r\n  }"}},{"message":"method build increase metric value","codeSpan":{"start":{"offset":2302,"line":68,"column":3},"end":{"offset":4666,"line":122,"column":4},"text":"Widget build(BuildContext context) {\r\n    \r\n\r\n\r\n\r\n\r\n    // This method is rerun every time setState is called, for instance as done\r\n    // by the _incrementCounter method above.\r\n    //\r\n    // The Flutter framework has been optimized to make rerunning build methods\r\n    // fast, so that you can just rebuild anything that needs updating rather\r\n    // than having to individually change instances of widgets.\r\n    return Scaffold(\r\n        appBar: AppBar(\r\n          // Here we take the value from the MyHomePage object that was created by\r\n          // the App.build method, and use it to set our appbar title.\r\n          title: Text(widget.title),\r\n        ),\r\n        body: Center(\r\n          // Center is a layout widget. It takes a single child and positions it\r\n          // in the middle of the parent.\r\n          child: Column(\r\n            // Column is also a layout widget. It takes a list of children and\r\n            // arranges them vertically. By default, it sizes itself to fit its\r\n            // children horizontally, and tries to be as tall as its parent.\r\n            //\r\n            // Invoke \"debug painting\" (press \"p\" in the console, choose the\r\n            // \"Toggle Debug Paint\" action from the Flutter Inspector in Android\r\n            // Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)\r\n            // to see the wireframe for each widget.\r\n            //\r\n            // Column has various properties to control how it sizes itself and\r\n            // how it positions its children. Here we use mainAxisAlignment to\r\n            // center the children vertically; the main axis here is the vertical\r\n            // axis because Columns are vertical (the cross axis would be\r\n            // horizontal).\r\n            mainAxisAlignment: MainAxisAlignment.center,\r\n            children: <Widget>[\r\n              const Text(\r\n                'You have pushed the button this many times:',\r\n              ),\r\n              Text(\r\n                '$_counter',\r\n                style: Theme.of(context).textTheme.headline4,\r\n                overflow: TextOverflow.ellipsis,\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n        floatingActionButton: FloatingActionButton(\r\n          onPressed: _incrementCounter,\r\n          tooltip: 'Increment',\r\n          child: const Icon(Icons.add),\r\n        ));\r\n  }"}}]},{"metricsId":"weight-of-class","value":1.0,"level":"none","comment":"This class has a weight of 1.0.","context":[{"message":"functional method build increase metric value","codeSpan":{"start":{"offset":2302,"line":68,"column":3},"end":{"offset":4666,"line":122,"column":4},"text":"Widget build(BuildContext context) {\r\n    \r\n\r\n\r\n\r\n\r\n    // This method is rerun every time setState is called, for instance as done\r\n    // by the _incrementCounter method above.\r\n    //\r\n    // The Flutter framework has been optimized to make rerunning build methods\r\n    // fast, so that you can just rebuild anything that needs updating rather\r\n    // than having to individually change instances of widgets.\r\n    return Scaffold(\r\n        appBar: AppBar(\r\n          // Here we take the value from the MyHomePage object that was created by\r\n          // the App.build method, and use it to set our appbar title.\r\n          title: Text(widget.title),\r\n        ),\r\n        body: Center(\r\n          // Center is a layout widget. It takes a single child and positions it\r\n          // in the middle of the parent.\r\n          child: Column(\r\n            // Column is also a layout widget. It takes a list of children and\r\n            // arranges them vertically. By default, it sizes itself to fit its\r\n            // children horizontally, and tries to be as tall as its parent.\r\n            //\r\n            // Invoke \"debug painting\" (press \"p\" in the console, choose the\r\n            // \"Toggle Debug Paint\" action from the Flutter Inspector in Android\r\n            // Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)\r\n            // to see the wireframe for each widget.\r\n            //\r\n            // Column has various properties to control how it sizes itself and\r\n            // how it positions its children. Here we use mainAxisAlignment to\r\n            // center the children vertically; the main axis here is the vertical\r\n            // axis because Columns are vertical (the cross axis would be\r\n            // horizontal).\r\n            mainAxisAlignment: MainAxisAlignment.center,\r\n            children: <Widget>[\r\n              const Text(\r\n                'You have pushed the button this many times:',\r\n              ),\r\n              Text(\r\n                '$_counter',\r\n                style: Theme.of(context).textTheme.headline4,\r\n                overflow: TextOverflow.ellipsis,\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n        floatingActionButton: FloatingActionButton(\r\n          onPressed: _incrementCounter,\r\n          tooltip: 'Increment',\r\n          child: const Icon(Icons.add),\r\n        ));\r\n  }"}}]}]}},"functions":{"main":{"codeSpan":{"start":{"offset":86,"line":4,"column":1},"end":{"offset":128,"line":6,"column":2},"text":"void main() {\r\n  runApp(const MyApp());\r\n}"},"metrics":[{"metricsId":"cyclomatic-complexity","value":1,"level":"none","comment":"This function has a cyclomatic complexity of 1.","context":[]},{"metricsId":"halstead-volume","value":2.0,"level":"none","comment":"This function has a halstead volume of 2.0.","context":[]},{"metricsId":"lines-of-code","value":3,"unitType":"lines","level":"none","comment":"This function has 3 lines of code.","context":[]},{"metricsId":"maximum-nesting-level","value":1,"level":"none","comment":"This function has a nesting level of 1.","context":[{"message":"Block function body increases depth","codeSpan":{"start":{"offset":98,"line":4,"column":13},"end":{"offset":128,"line":6,"column":2},"text":"{\r\n  runApp(const MyApp());\r\n}"}}]},{"metricsId":"number-of-parameters","value":0,"level":"none","comment":"This function has 0 parameters.","context":[]},{"metricsId":"source-lines-of-code","value":1,"unitType":"line","level":"none","comment":"This function has 1 source line of code.","context":[{"message":"line contains source code","codeSpan":{"start":{"offset":101,"line":5,"column":0},"end":{"offset":101,"line":5,"column":0},"text":""}}]},{"metricsId":"maintainability-index","value":98,"level":"none","comment":"This function has 98 maintainability index.","context":[]}]},"MyApp.MyApp":{"codeSpan":{"start":{"offset":173,"line":9,"column":3},"end":{"offset":198,"line":9,"column":28},"text":"const MyApp({super.key});"},"metrics":[{"metricsId":"cyclomatic-complexity","value":1,"level":"none","comment":"This constructor has a cyclomatic complexity of 1.","context":[]},{"metricsId":"halstead-volume","value":0.0,"level":"none","comment":"This constructor has a halstead volume of 0.0.","context":[]},{"metricsId":"lines-of-code","value":1,"unitType":"line","level":"none","comment":"This constructor has 1 line of code.","context":[]},{"metricsId":"maximum-nesting-level","value":0,"level":"none","comment":"This constructor has a nesting level of 0.","context":[]},{"metricsId":"source-lines-of-code","value":0,"unitType":"lines","level":"none","comment":"This constructor has 0 source lines of code.","context":[]},{"metricsId":"maintainability-index","value":100,"level":"none","comment":"This constructor has 100 maintainability index.","context":[]}]},"MyApp.build":{"codeSpan":{"start":{"offset":268,"line":13,"column":3},"end":{"offset":1086,"line":32,"column":4},"text":"Widget build(BuildContext context) {\r\n    print('');\r\n\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n        // This is the theme of your application.\r\n        //\r\n        // Try running your application with \"flutter run\". You'll see the\r\n        // application has a blue toolbar. Then, without quitting the app, try\r\n        // changing the primarySwatch below to Colors.green and then invoke\r\n        // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\r\n        // or simply save your changes to \"hot reload\" in a Flutter IDE).\r\n        // Notice that the counter didn't reset back to zero; the application\r\n        // is not restarted.\r\n        primarySwatch: Colors.blue,\r\n      ),\r\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n    );\r\n  }"},"metrics":[{"metricsId":"cyclomatic-complexity","value":1,"level":"none","comment":"This method has a cyclomatic complexity of 1.","context":[]},{"metricsId":"halstead-volume","value":36.541209043760986,"level":"none","comment":"This method has a halstead volume of 36.541209043760986.","context":[]},{"metricsId":"lines-of-code","value":21,"unitType":"lines","level":"none","comment":"This method has 21 lines of code.","context":[]},{"metricsId":"maximum-nesting-level","value":1,"level":"none","comment":"This method has a nesting level of 1.","context":[{"message":"Block function body increases depth","codeSpan":{"start":{"offset":303,"line":13,"column":38},"end":{"offset":1086,"line":32,"column":4},"text":"{\r\n    print('');\r\n\r\n    return MaterialApp(\r\n      title: 'Flutter Demo',\r\n      theme: ThemeData(\r\n        // This is the theme of your application.\r\n        //\r\n        // Try running your application with \"flutter run\". You'll see the\r\n        // application has a blue toolbar. Then, without quitting the app, try\r\n        // changing the primarySwatch below to Colors.green and then invoke\r\n        // \"hot reload\" (press \"r\" in the console where you ran \"flutter run\",\r\n        // or simply save your changes to \"hot reload\" in a Flutter IDE).\r\n        // Notice that the counter didn't reset back to zero; the application\r\n        // is not restarted.\r\n        primarySwatch: Colors.blue,\r\n      ),\r\n      home: const MyHomePage(title: 'Flutter Demo Home Page'),\r\n    );\r\n  }"}}]},{"metricsId":"number-of-parameters","value":1,"level":"none","comment":"This method has 1 parameter.","context":[]},{"metricsId":"source-lines-of-code","value":8,"unitType":"lines","level":"none","comment":"This method has 8 source lines of code.","context":[{"message":"line contains source code","codeSpan":{"start":{"offset":306,"line":14,"column":0},"end":{"offset":306,"line":14,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":324,"line":16,"column":0},"end":{"offset":324,"line":16,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":349,"line":17,"column":0},"end":{"offset":349,"line":17,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":379,"line":18,"column":0},"end":{"offset":379,"line":18,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":964,"line":28,"column":0},"end":{"offset":964,"line":28,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":1001,"line":29,"column":0},"end":{"offset":1001,"line":29,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":1011,"line":30,"column":0},"end":{"offset":1011,"line":30,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":1075,"line":31,"column":0},"end":{"offset":1075,"line":31,"column":0},"text":""}}]},{"metricsId":"maintainability-index","value":70,"level":"none","comment":"This method has 70 maintainability index.","context":[]}]},"MyHomePage.MyHomePage":{"codeSpan":{"start":{"offset":1138,"line":36,"column":3},"end":{"offset":1189,"line":36,"column":54},"text":"const MyHomePage({super.key, required this.title});"},"metrics":[{"metricsId":"cyclomatic-complexity","value":1,"level":"none","comment":"This constructor has a cyclomatic complexity of 1.","context":[]},{"metricsId":"halstead-volume","value":0.0,"level":"none","comment":"This constructor has a halstead volume of 0.0.","context":[]},{"metricsId":"lines-of-code","value":1,"unitType":"line","level":"none","comment":"This constructor has 1 line of code.","context":[]},{"metricsId":"maximum-nesting-level","value":0,"level":"none","comment":"This constructor has a nesting level of 0.","context":[]},{"metricsId":"source-lines-of-code","value":0,"unitType":"lines","level":"none","comment":"This constructor has 0 source lines of code.","context":[]},{"metricsId":"maintainability-index","value":100,"level":"none","comment":"This constructor has 100 maintainability index.","context":[]}]},"MyHomePage.createState":{"codeSpan":{"start":{"offset":1686,"line":50,"column":3},"end":{"offset":1740,"line":50,"column":57},"text":"State<MyHomePage> createState() => _MyHomePageState();"},"metrics":[{"metricsId":"cyclomatic-complexity","value":1,"level":"none","comment":"This method has a cyclomatic complexity of 1.","context":[]},{"metricsId":"halstead-volume","value":0.0,"level":"none","comment":"This method has a halstead volume of 0.0.","context":[]},{"metricsId":"lines-of-code","value":2,"unitType":"lines","level":"none","comment":"This method has 2 lines of code.","context":[]},{"metricsId":"maximum-nesting-level","value":0,"level":"none","comment":"This method has a nesting level of 0.","context":[]},{"metricsId":"number-of-parameters","value":0,"level":"none","comment":"This method has 0 parameters.","context":[]},{"metricsId":"source-lines-of-code","value":1,"unitType":"line","level":"none","comment":"This method has 1 source line of code.","context":[{"message":"line contains source code","codeSpan":{"start":{"offset":1684,"line":50,"column":0},"end":{"offset":1684,"line":50,"column":0},"text":""}}]},{"metricsId":"maintainability-index","value":100,"level":"none","comment":"This method has 100 maintainability index.","context":[]}]},"_MyHomePageState._incrementCounter":{"codeSpan":{"start":{"offset":1824,"line":56,"column":3},"end":{"offset":2283,"line":65,"column":4},"text":"void _incrementCounter() {\r\n    setState(() {\r\n      // This call to setState tells the Flutter framework that something has\r\n      // changed in this State, which causes it to rerun the build method below\r\n      // so that the display can reflect the updated values. If we changed\r\n      // _counter without calling setState(), then the build method would not be\r\n      // called again, and so nothing would appear to happen.\r\n      _counter++;\r\n    });\r\n  }"},"metrics":[{"metricsId":"cyclomatic-complexity","value":1,"level":"none","comment":"This method has a cyclomatic complexity of 1.","context":[]},{"metricsId":"halstead-volume","value":7.924812503605781,"level":"none","comment":"This method has a halstead volume of 7.924812503605781.","context":[]},{"metricsId":"lines-of-code","value":10,"unitType":"lines","level":"none","comment":"This method has 10 lines of code.","context":[]},{"metricsId":"maximum-nesting-level","value":2,"level":"none","comment":"This method has a nesting level of 2.","context":[{"message":"Block function body increases depth","codeSpan":{"start":{"offset":1849,"line":56,"column":28},"end":{"offset":2283,"line":65,"column":4},"text":"{\r\n    setState(() {\r\n      // This call to setState tells the Flutter framework that something has\r\n      // changed in this State, which causes it to rerun the build method below\r\n      // so that the display can reflect the updated values. If we changed\r\n      // _counter without calling setState(), then the build method would not be\r\n      // called again, and so nothing would appear to happen.\r\n      _counter++;\r\n    });\r\n  }"}},{"message":"Block function body increases depth","codeSpan":{"start":{"offset":1868,"line":57,"column":17},"end":{"offset":2276,"line":64,"column":6},"text":"{\r\n      // This call to setState tells the Flutter framework that something has\r\n      // changed in this State, which causes it to rerun the build method below\r\n      // so that the display can reflect the updated values. If we changed\r\n      // _counter without calling setState(), then the build method would not be\r\n      // called again, and so nothing would appear to happen.\r\n      _counter++;\r\n    }"}}]},{"metricsId":"number-of-parameters","value":0,"level":"none","comment":"This method has 0 parameters.","context":[]},{"metricsId":"source-lines-of-code","value":3,"unitType":"lines","level":"none","comment":"This method has 3 source lines of code.","context":[{"message":"line contains source code","codeSpan":{"start":{"offset":1852,"line":57,"column":0},"end":{"offset":1852,"line":57,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":2252,"line":63,"column":0},"end":{"offset":2252,"line":63,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":2271,"line":64,"column":0},"end":{"offset":2271,"line":64,"column":0},"text":""}}]},{"metricsId":"maintainability-index","value":84,"level":"none","comment":"This method has 84 maintainability index.","context":[]}]},"_MyHomePageState.build":{"codeSpan":{"start":{"offset":2302,"line":68,"column":3},"end":{"offset":4666,"line":122,"column":4},"text":"Widget build(BuildContext context) {\r\n    \r\n\r\n\r\n\r\n\r\n    // This method is rerun every time setState is called, for instance as done\r\n    // by the _incrementCounter method above.\r\n    //\r\n    // The Flutter framework has been optimized to make rerunning build methods\r\n    // fast, so that you can just rebuild anything that needs updating rather\r\n    // than having to individually change instances of widgets.\r\n    return Scaffold(\r\n        appBar: AppBar(\r\n          // Here we take the value from the MyHomePage object that was created by\r\n          // the App.build method, and use it to set our appbar title.\r\n          title: Text(widget.title),\r\n        ),\r\n        body: Center(\r\n          // Center is a layout widget. It takes a single child and positions it\r\n          // in the middle of the parent.\r\n          child: Column(\r\n            // Column is also a layout widget. It takes a list of children and\r\n            // arranges them vertically. By default, it sizes itself to fit its\r\n            // children horizontally, and tries to be as tall as its parent.\r\n            //\r\n            // Invoke \"debug painting\" (press \"p\" in the console, choose the\r\n            // \"Toggle Debug Paint\" action from the Flutter Inspector in Android\r\n            // Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)\r\n            // to see the wireframe for each widget.\r\n            //\r\n            // Column has various properties to control how it sizes itself and\r\n            // how it positions its children. Here we use mainAxisAlignment to\r\n            // center the children vertically; the main axis here is the vertical\r\n            // axis because Columns are vertical (the cross axis would be\r\n            // horizontal).\r\n            mainAxisAlignment: MainAxisAlignment.center,\r\n            children: <Widget>[\r\n              const Text(\r\n                'You have pushed the button this many times:',\r\n              ),\r\n              Text(\r\n                '$_counter',\r\n                style: Theme.of(context).textTheme.headline4,\r\n                overflow: TextOverflow.ellipsis,\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n        floatingActionButton: FloatingActionButton(\r\n          onPressed: _incrementCounter,\r\n          tooltip: 'Increment',\r\n          child: const Icon(Icons.add),\r\n        ));\r\n  }"},"metrics":[{"metricsId":"cyclomatic-complexity","value":1,"level":"none","comment":"This method has a cyclomatic complexity of 1.","context":[]},{"metricsId":"halstead-volume","value":200.04203766085368,"level":"none","comment":"This method has a halstead volume of 200.04203766085368.","context":[]},{"metricsId":"lines-of-code","value":56,"unitType":"lines","level":"none","comment":"This method has 56 lines of code.","context":[]},{"metricsId":"maximum-nesting-level","value":1,"level":"none","comment":"This method has a nesting level of 1.","context":[{"message":"Block function body increases depth","codeSpan":{"start":{"offset":2337,"line":68,"column":38},"end":{"offset":4666,"line":122,"column":4},"text":"{\r\n    \r\n\r\n\r\n\r\n\r\n    // This method is rerun every time setState is called, for instance as done\r\n    // by the _incrementCounter method above.\r\n    //\r\n    // The Flutter framework has been optimized to make rerunning build methods\r\n    // fast, so that you can just rebuild anything that needs updating rather\r\n    // than having to individually change instances of widgets.\r\n    return Scaffold(\r\n        appBar: AppBar(\r\n          // Here we take the value from the MyHomePage object that was created by\r\n          // the App.build method, and use it to set our appbar title.\r\n          title: Text(widget.title),\r\n        ),\r\n        body: Center(\r\n          // Center is a layout widget. It takes a single child and positions it\r\n          // in the middle of the parent.\r\n          child: Column(\r\n            // Column is also a layout widget. It takes a list of children and\r\n            // arranges them vertically. By default, it sizes itself to fit its\r\n            // children horizontally, and tries to be as tall as its parent.\r\n            //\r\n            // Invoke \"debug painting\" (press \"p\" in the console, choose the\r\n            // \"Toggle Debug Paint\" action from the Flutter Inspector in Android\r\n            // Studio, or the \"Toggle Debug Paint\" command in Visual Studio Code)\r\n            // to see the wireframe for each widget.\r\n            //\r\n            // Column has various properties to control how it sizes itself and\r\n            // how it positions its children. Here we use mainAxisAlignment to\r\n            // center the children vertically; the main axis here is the vertical\r\n            // axis because Columns are vertical (the cross axis would be\r\n            // horizontal).\r\n            mainAxisAlignment: MainAxisAlignment.center,\r\n            children: <Widget>[\r\n              const Text(\r\n                'You have pushed the button this many times:',\r\n              ),\r\n              Text(\r\n                '$_counter',\r\n                style: Theme.of(context).textTheme.headline4,\r\n                overflow: TextOverflow.ellipsis,\r\n              ),\r\n            ],\r\n          ),\r\n        ),\r\n        floatingActionButton: FloatingActionButton(\r\n          onPressed: _incrementCounter,\r\n          tooltip: 'Increment',\r\n          child: const Icon(Icons.add),\r\n        ));\r\n  }"}}]},{"metricsId":"number-of-parameters","value":1,"level":"none","comment":"This method has 1 parameter.","context":[]},{"metricsId":"source-lines-of-code","value":24,"unitType":"lines","level":"none","comment":"This method has 24 source lines of code.","context":[{"message":"line contains source code","codeSpan":{"start":{"offset":2715,"line":80,"column":0},"end":{"offset":2715,"line":80,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":2737,"line":81,"column":0},"end":{"offset":2737,"line":81,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":2918,"line":84,"column":0},"end":{"offset":2918,"line":84,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":2956,"line":85,"column":0},"end":{"offset":2956,"line":85,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":2968,"line":86,"column":0},"end":{"offset":2968,"line":86,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":3116,"line":89,"column":0},"end":{"offset":3116,"line":89,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4058,"line":104,"column":0},"end":{"offset":4058,"line":104,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4116,"line":105,"column":0},"end":{"offset":4116,"line":105,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4149,"line":106,"column":0},"end":{"offset":4149,"line":106,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4176,"line":107,"column":0},"end":{"offset":4176,"line":107,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4240,"line":108,"column":0},"end":{"offset":4240,"line":108,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4258,"line":109,"column":0},"end":{"offset":4258,"line":109,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4279,"line":110,"column":0},"end":{"offset":4279,"line":110,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4309,"line":111,"column":0},"end":{"offset":4309,"line":111,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4372,"line":112,"column":0},"end":{"offset":4372,"line":112,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4422,"line":113,"column":0},"end":{"offset":4422,"line":113,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4440,"line":114,"column":0},"end":{"offset":4440,"line":114,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4456,"line":115,"column":0},"end":{"offset":4456,"line":115,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4470,"line":116,"column":0},"end":{"offset":4470,"line":116,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4482,"line":117,"column":0},"end":{"offset":4482,"line":117,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4535,"line":118,"column":0},"end":{"offset":4535,"line":118,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4576,"line":119,"column":0},"end":{"offset":4576,"line":119,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4609,"line":120,"column":0},"end":{"offset":4609,"line":120,"column":0},"text":""}},{"message":"line contains source code","codeSpan":{"start":{"offset":4650,"line":121,"column":0},"end":{"offset":4650,"line":121,"column":0},"text":""}}]},{"metricsId":"maintainability-index","value":54,"level":"none","comment":"This method has 54 maintainability index.","context":[]}]}},"issues":[{"ruleId":"prefer-trailing-comma","documentation":"https://dcm.dev/docs/individuals/rules/common/prefer-trailing-comma","codeSpan":{"start":{"offset":4490,"line":117,"column":9},"end":{"offset":4659,"line":121,"column":10},"text":"floatingActionButton: FloatingActionButton(\r\n          onPressed: _incrementCounter,\r\n          tooltip: 'Increment',\r\n          child: const Icon(Icons.add),\r\n        )"},"severity":"style","message":"Prefer trailing comma.","suggestion":{"comment":"Add trailing comma.","replacement":"floatingActionButton: FloatingActionButton(\r\n          onPressed: _incrementCounter,\r\n          tooltip: 'Increment',\r\n          child: const Icon(Icons.add),\r\n        ),"}}],"antiPatternCases":[]},{"path":"lib\\whatever.dart","fileMetrics":[{"metricsId":"technical-debt","value":0.0,"level":"none","comment":"This compilation unit has 0.0 swe hours of debt.","context":[]}],"classes":{"UserModel":{"codeSpan":{"start":{"offset":0,"line":1,"column":1},"end":{"offset":133,"line":10,"column":2},"text":"class UserModel {\n  final String name;\n\n  final String id;\n\n  const UserModel({\n    required this.name,\n    required this.id,\n  });\n}"},"metrics":[{"metricsId":"number-of-methods","value":1,"unitType":"method","level":"none","comment":"This class has 1 method.","context":[{"message":"constructor UserModel increase metric value","codeSpan":{"start":{"offset":62,"line":6,"column":3},"end":{"offset":131,"line":9,"column":6},"text":"const UserModel({\n    required this.name,\n    required this.id,\n  });"}}]},{"metricsId":"weight-of-class","value":0.0,"level":"none","comment":"This class has a weight of 0.0.","context":[{"message":"public constructor UserModel decrease metric value","codeSpan":{"start":{"offset":62,"line":6,"column":3},"end":{"offset":131,"line":9,"column":6},"text":"const UserModel({\n    required this.name,\n    required this.id,\n  });"}}]}]}},"functions":{"UserModel.UserModel":{"codeSpan":{"start":{"offset":62,"line":6,"column":3},"end":{"offset":131,"line":9,"column":6},"text":"const UserModel({\n    required this.name,\n    required this.id,\n  });"},"metrics":[{"metricsId":"cyclomatic-complexity","value":1,"level":"none","comment":"This constructor has a cyclomatic complexity of 1.","context":[]},{"metricsId":"halstead-volume","value":0.0,"level":"none","comment":"This constructor has a halstead volume of 0.0.","context":[]},{"metricsId":"lines-of-code","value":4,"unitType":"lines","level":"none","comment":"This constructor has 4 lines of code.","context":[]},{"metricsId":"maximum-nesting-level","value":0,"level":"none","comment":"This constructor has a nesting level of 0.","context":[]},{"metricsId":"source-lines-of-code","value":0,"unitType":"lines","level":"none","comment":"This constructor has 0 source lines of code.","context":[]},{"metricsId":"maintainability-index","value":100,"level":"none","comment":"This constructor has 100 maintainability index.","context":[]}]}},"issues":[],"antiPatternCases":[]}],"summary":[{"status":"none","title":"Scanned folders","value":["lib"],"violations":0},{"status":"none","title":"Total scanned files","value":3,"violations":0},{"status":"none","title":"Total lines of source code","value":80,"violations":0},{"status":"none","title":"Total classes","value":5,"violations":0},{"status":"none","title":"Average Cyclomatic Number per line of code","value":0.125,"violations":0},{"status":"none","title":"Average Source Lines of Code per method","value":8,"violations":0},{"status":"none","title":"Total tech debt","value":"not found","violations":0}]}